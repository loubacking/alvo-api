generator client {
  provider = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider = "mysql"
  url = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model User {
  id                 String @id @default(uuid())
  fullName           String @db.VarChar(200)
  email              String @unique @db.VarChar(200)
  encryptedPassword  String? @db.VarChar(1000)
  authToken          String? @db.VarChar(1000)
  googleId           String? @db.VarChar(1000)
  playlists          Playlist[]
  createdAt          DateTime @default(now())
  updateAt           DateTime @updatedAt
}

model Artist {
  id          String @id @default(uuid())
  imageUrl    String @db.VarChar(1000)
  name        String @db.VarChar(200)
  songs       Song[] @relation("ArtistSongs")
  createdAt   DateTime @default(now())
  updateAt    DateTime @updatedAt
}

model Song {
  id          String @id @default(uuid())
  name        String @db.VarChar(200)
  chords      Json
  lyrics      Json
  artist      Artist @relation(name: "ArtistSongs", fields: [artistId], references: [id]) 
  artistId    String @unique
  playlists   SongsOnPlaylist[]
  createdAt   DateTime @default(now())
  updateAt    DateTime @updatedAt

  @@index([artistId])
}
 
model Playlist {
  id          String @id @default(uuid())
  name        String @db.VarChar(200)
  songs       SongsOnPlaylist[]
  owner       User @relation(fields: [ownerId], references: [id])
  ownerId     String  @unique
  createdAt   DateTime @default(now())
  updateAt    DateTime @updatedAt

  @@index([ownerId])
}

model SongsOnPlaylist {
  id          String @id @default(uuid())
  playlist    Playlist @relation(fields: [playlistId], references: [id])
  playlistId  String
  song        Song @relation(fields: [songId], references: [id])
  songId      String
  createdAt   DateTime @default(now())
  updateAt    DateTime @updatedAt

  @@index([playlistId])
  @@index([songId])
}